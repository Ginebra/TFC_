   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC4:
  20 0000 0D0A00   		.ascii	"\015\012\000"
  21              		.global	__aeabi_i2f
  22              		.global	__aeabi_fdiv
  23              		.global	__aeabi_fcmplt
  24              		.global	__aeabi_fcmpgt
  25 0003 00       		.section	.text.main,"ax",%progbits
  26              		.align	2
  27              		.global	main
  28              		.code	16
  29              		.thumb_func
  31              	main:
  32              	.LFB0:
  33              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** int main(void)
   5:../Sources/main.c **** {
  34              		.loc 1 5 0
  35              		.cfi_startproc
  36 0000 90B5     		push	{r4, r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 87B0     		sub	sp, sp, #28
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
   6:../Sources/main.c ****    uint32_t t,i=0, ana=0;
  48              		.loc 1 6 0
  49 0006 0023     		mov	r3, #0
  50 0008 3B61     		str	r3, [r7, #16]
  51 000a 0023     		mov	r3, #0
  52 000c FB60     		str	r3, [r7, #12]
   7:../Sources/main.c ****    int guardar,dato=0;
  53              		.loc 1 7 0
  54 000e 0023     		mov	r3, #0
  55 0010 7B60     		str	r3, [r7, #4]
   8:../Sources/main.c ****    //int32_t guardar;
   9:../Sources/main.c ****    
  10:../Sources/main.c ****    TFC_Init();
  56              		.loc 1 10 0
  57 0012 FFF7FEFF 		bl	TFC_Init
  58              	.L24:
  11:../Sources/main.c ****    
  12:../Sources/main.c ****    for(;;)
  13:../Sources/main.c ****    {      
  14:../Sources/main.c ****       //TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Seria
  15:../Sources/main.c ****          TFC_Task();
  59              		.loc 1 15 0
  60 0016 FFF7FEFF 		bl	TFC_Task
  16:../Sources/main.c **** 
  17:../Sources/main.c ****          //This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  18:../Sources/main.c ****          //Let's look at the middle 2 switches
  19:../Sources/main.c ****          switch(dato)
  61              		.loc 1 19 0
  62 001a 7B68     		ldr	r3, [r7, #4]
  63 001c 022B     		cmp	r3, #2
  64 001e 4FD0     		beq	.L4
  65 0020 032B     		cmp	r3, #3
  66 0022 00D1     		bne	.LCB30
  67 0024 72E0     		b	.L5	@long jump
  68              	.LCB30:
  69 0026 012B     		cmp	r3, #1
  70 0028 14D0     		beq	.L3
  20:../Sources/main.c ****          {
  21:../Sources/main.c ****          default:
  22:../Sources/main.c ****          case 0 :
  23:../Sources/main.c ****         	 TFC_SetMotorPWM(0,0);
  71              		.loc 1 23 0
  72 002a 0022     		mov	r2, #0
  73 002c 0023     		mov	r3, #0
  74 002e 101C     		add	r0, r2, #0
  75 0030 191C     		add	r1, r3, #0
  76 0032 FFF7FEFF 		bl	TFC_SetMotorPWM
  24:../Sources/main.c ****         	 TFC_SetServo(0,0);
  77              		.loc 1 24 0
  78 0036 0023     		mov	r3, #0
  79 0038 0020     		mov	r0, #0
  80 003a 191C     		add	r1, r3, #0
  81 003c FFF7FEFF 		bl	TFC_SetServo
  25:../Sources/main.c ****             //Demo mode 0 just tests the switches and LED's
  26:../Sources/main.c ****             if(TFC_PUSH_BUTTON_1_PRESSED)
  82              		.loc 1 26 0
  83 0040 7F4B     		ldr	r3, .L29
  84 0042 1A69     		ldr	r2, [r3, #16]
  85 0044 8023     		mov	r3, #128
  86 0046 9B02     		lsl	r3, r3, #10
  87 0048 1340     		and	r3, r2
  88 004a 00D1     		bne	.LCB48
  89 004c F4E0     		b	.L27	@long jump
  90              	.LCB48:
  27:../Sources/main.c ****                dato=3;
  91              		.loc 1 27 0
  92 004e 0323     		mov	r3, #3
  93 0050 7B60     		str	r3, [r7, #4]
  28:../Sources/main.c ****             
  29:../Sources/main.c ****             break;
  94              		.loc 1 29 0
  95 0052 F1E0     		b	.L27
  96              	.L3:
  30:../Sources/main.c ****                
  31:../Sources/main.c ****          case 1:
  32:../Sources/main.c ****             
  33:../Sources/main.c ****             //Demo mode 1 will just move the servos with the on-board potentiometers
  34:../Sources/main.c ****             if(TFC_Ticker[0]>=20)
  97              		.loc 1 34 0
  98 0054 7B4B     		ldr	r3, .L29+4
  99 0056 1B68     		ldr	r3, [r3]
 100 0058 132B     		cmp	r3, #19
 101 005a 12D9     		bls	.L8
  35:../Sources/main.c ****             {
  36:../Sources/main.c ****                TFC_Ticker[0] = 0; //reset the Ticker
 102              		.loc 1 36 0
 103 005c 794B     		ldr	r3, .L29+4
 104 005e 0022     		mov	r2, #0
 105 0060 1A60     		str	r2, [r3]
  37:../Sources/main.c ****                //Every 20 mSeconds, update the Servos
  38:../Sources/main.c ****                TFC_SetServo(0,TFC_ReadPot(0));
 106              		.loc 1 38 0
 107 0062 0020     		mov	r0, #0
 108 0064 FFF7FEFF 		bl	TFC_ReadPot
 109 0068 031C     		add	r3, r0, #0
 110 006a 0020     		mov	r0, #0
 111 006c 191C     		add	r1, r3, #0
 112 006e FFF7FEFF 		bl	TFC_SetServo
  39:../Sources/main.c ****                TFC_SetServo(1,TFC_ReadPot(1));
 113              		.loc 1 39 0
 114 0072 0120     		mov	r0, #1
 115 0074 FFF7FEFF 		bl	TFC_ReadPot
 116 0078 031C     		add	r3, r0, #0
 117 007a 0120     		mov	r0, #1
 118 007c 191C     		add	r1, r3, #0
 119 007e FFF7FEFF 		bl	TFC_SetServo
 120              	.L8:
  40:../Sources/main.c ****             }
  41:../Sources/main.c ****             //Let's put a pattern on the LEDs
  42:../Sources/main.c ****             if(TFC_Ticker[1] >= 125)
 121              		.loc 1 42 0
 122 0082 704B     		ldr	r3, .L29+4
 123 0084 5B68     		ldr	r3, [r3, #4]
 124 0086 7C2B     		cmp	r3, #124
 125 0088 0FD9     		bls	.L9
  43:../Sources/main.c ****             {
  44:../Sources/main.c ****                TFC_Ticker[1] = 0;
 126              		.loc 1 44 0
 127 008a 6E4B     		ldr	r3, .L29+4
 128 008c 0022     		mov	r2, #0
 129 008e 5A60     		str	r2, [r3, #4]
  45:../Sources/main.c ****                t++;
 130              		.loc 1 45 0
 131 0090 7B69     		ldr	r3, [r7, #20]
 132 0092 0133     		add	r3, r3, #1
 133 0094 7B61     		str	r3, [r7, #20]
  46:../Sources/main.c ****                if(t>4)
 134              		.loc 1 46 0
 135 0096 7B69     		ldr	r3, [r7, #20]
 136 0098 042B     		cmp	r3, #4
 137 009a 01D9     		bls	.L10
  47:../Sources/main.c ****                {
  48:../Sources/main.c ****                   t=0;
 138              		.loc 1 48 0
 139 009c 0023     		mov	r3, #0
 140 009e 7B61     		str	r3, [r7, #20]
 141              	.L10:
  49:../Sources/main.c ****                }         
  50:../Sources/main.c ****                TFC_SetBatteryLED_Level(t);
 142              		.loc 1 50 0
 143 00a0 7B69     		ldr	r3, [r7, #20]
 144 00a2 DBB2     		uxtb	r3, r3
 145 00a4 181C     		mov	r0, r3
 146 00a6 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 147              	.L9:
  51:../Sources/main.c ****             }
  52:../Sources/main.c ****             
  53:../Sources/main.c ****             TFC_SetMotorPWM(0,0); //Make sure motors are off
 148              		.loc 1 53 0
 149 00aa 0022     		mov	r2, #0
 150 00ac 0023     		mov	r3, #0
 151 00ae 101C     		add	r0, r2, #0
 152 00b0 191C     		add	r1, r3, #0
 153 00b2 FFF7FEFF 		bl	TFC_SetMotorPWM
  54:../Sources/main.c ****             TFC_HBRIDGE_DISABLE;
 154              		.loc 1 54 0
 155 00b6 644B     		ldr	r3, .L29+8
 156 00b8 8022     		mov	r2, #128
 157 00ba 9203     		lsl	r2, r2, #14
 158 00bc 9A60     		str	r2, [r3, #8]
  55:../Sources/main.c ****          
  56:../Sources/main.c **** 
  57:../Sources/main.c ****             break;
 159              		.loc 1 57 0
 160 00be BEE0     		b	.L7
 161              	.L4:
  58:../Sources/main.c ****             
  59:../Sources/main.c ****          case 2 :
  60:../Sources/main.c ****             
  61:../Sources/main.c ****             //Demo Mode 2 will use the Pots to make the motors move
  62:../Sources/main.c ****             TFC_HBRIDGE_ENABLE;
 162              		.loc 1 62 0
 163 00c0 614B     		ldr	r3, .L29+8
 164 00c2 8022     		mov	r2, #128
 165 00c4 9203     		lsl	r2, r2, #14
 166 00c6 5A60     		str	r2, [r3, #4]
  63:../Sources/main.c ****             TFC_SetMotorPWM(TFC_ReadPot(0),TFC_ReadPot(0));
 167              		.loc 1 63 0
 168 00c8 0020     		mov	r0, #0
 169 00ca FFF7FEFF 		bl	TFC_ReadPot
 170 00ce 041C     		add	r4, r0, #0
 171 00d0 0020     		mov	r0, #0
 172 00d2 FFF7FEFF 		bl	TFC_ReadPot
 173 00d6 031C     		add	r3, r0, #0
 174 00d8 201C     		add	r0, r4, #0
 175 00da 191C     		add	r1, r3, #0
 176 00dc FFF7FEFF 		bl	TFC_SetMotorPWM
  64:../Sources/main.c ****                   
  65:../Sources/main.c ****             //Let's put a pattern on the LEDs
  66:../Sources/main.c ****             if(TFC_Ticker[1] >= 125)
 177              		.loc 1 66 0
 178 00e0 584B     		ldr	r3, .L29+4
 179 00e2 5B68     		ldr	r3, [r3, #4]
 180 00e4 7C2B     		cmp	r3, #124
 181 00e6 00D8     		bhi	.LCB128
 182 00e8 A8E0     		b	.L28	@long jump
 183              	.LCB128:
  67:../Sources/main.c ****                {
  68:../Sources/main.c ****                   TFC_Ticker[1] = 0;
 184              		.loc 1 68 0
 185 00ea 564B     		ldr	r3, .L29+4
 186 00ec 0022     		mov	r2, #0
 187 00ee 5A60     		str	r2, [r3, #4]
  69:../Sources/main.c ****                      t++;
 188              		.loc 1 69 0
 189 00f0 7B69     		ldr	r3, [r7, #20]
 190 00f2 0133     		add	r3, r3, #1
 191 00f4 7B61     		str	r3, [r7, #20]
  70:../Sources/main.c ****                      if(t>4)
 192              		.loc 1 70 0
 193 00f6 7B69     		ldr	r3, [r7, #20]
 194 00f8 042B     		cmp	r3, #4
 195 00fa 01D9     		bls	.L12
  71:../Sources/main.c ****                      {
  72:../Sources/main.c ****                         t=0;
 196              		.loc 1 72 0
 197 00fc 0023     		mov	r3, #0
 198 00fe 7B61     		str	r3, [r7, #20]
 199              	.L12:
  73:../Sources/main.c ****                      }         
  74:../Sources/main.c ****                   TFC_SetBatteryLED_Level(t);
 200              		.loc 1 74 0
 201 0100 7B69     		ldr	r3, [r7, #20]
 202 0102 DBB2     		uxtb	r3, r3
 203 0104 181C     		mov	r0, r3
 204 0106 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  75:../Sources/main.c ****                }
  76:../Sources/main.c ****             break;
 205              		.loc 1 76 0
 206 010a 97E0     		b	.L28
 207              	.L5:
  77:../Sources/main.c ****          
  78:../Sources/main.c ****          case 3 :
  79:../Sources/main.c ****         	 
  80:../Sources/main.c ****         	 if(TFC_PUSH_BUTTON_0_PRESSED){
 208              		.loc 1 80 0
 209 010c 4C4B     		ldr	r3, .L29
 210 010e 1A69     		ldr	r2, [r3, #16]
 211 0110 8023     		mov	r3, #128
 212 0112 9B01     		lsl	r3, r3, #6
 213 0114 1340     		and	r3, r2
 214 0116 01D0     		beq	.L13
  81:../Sources/main.c ****         	 dato=0;
 215              		.loc 1 81 0
 216 0118 0023     		mov	r3, #0
 217 011a 7B60     		str	r3, [r7, #4]
 218              	.L13:
  82:../Sources/main.c ****         	 }
  83:../Sources/main.c ****         	 
  84:../Sources/main.c ****          ana = 4096;
 219              		.loc 1 84 0
 220 011c 8023     		mov	r3, #128
 221 011e 5B01     		lsl	r3, r3, #5
 222 0120 FB60     		str	r3, [r7, #12]
  85:../Sources/main.c ****     
  86:../Sources/main.c ****          if(TFC_Ticker[0]>100 && LineScanImageReady==1)
 223              		.loc 1 86 0
 224 0122 484B     		ldr	r3, .L29+4
 225 0124 1B68     		ldr	r3, [r3]
 226 0126 642B     		cmp	r3, #100
 227 0128 4DD9     		bls	.L14
 228              		.loc 1 86 0 is_stmt 0
 229 012a 484B     		ldr	r3, .L29+12
 230 012c 1B78     		ldrb	r3, [r3]
 231 012e DBB2     		uxtb	r3, r3
 232 0130 012B     		cmp	r3, #1
 233 0132 48D1     		bne	.L14
  87:../Sources/main.c ****                         {
  88:../Sources/main.c ****                          TFC_Ticker[0] = 0;
 234              		.loc 1 88 0 is_stmt 1
 235 0134 434B     		ldr	r3, .L29+4
 236 0136 0022     		mov	r2, #0
 237 0138 1A60     		str	r2, [r3]
  89:../Sources/main.c ****                          LineScanImageReady=0;
 238              		.loc 1 89 0
 239 013a 444B     		ldr	r3, .L29+12
 240 013c 0022     		mov	r2, #0
 241 013e 1A70     		strb	r2, [r3]
  90:../Sources/main.c ****                          //TERMINAL_PRINTF("\r\n");
  91:../Sources/main.c ****                          //TERMINAL_PRINTF("L:");
  92:../Sources/main.c ****                          
  93:../Sources/main.c ****                             if(t==0)
 242              		.loc 1 93 0
 243 0140 7B69     		ldr	r3, [r7, #20]
 244 0142 002B     		cmp	r3, #0
 245 0144 02D1     		bne	.L15
  94:../Sources/main.c ****                                t=3;
 246              		.loc 1 94 0
 247 0146 0323     		mov	r3, #3
 248 0148 7B61     		str	r3, [r7, #20]
 249 014a 02E0     		b	.L16
 250              	.L15:
  95:../Sources/main.c ****                             else
  96:../Sources/main.c ****                                t--;
 251              		.loc 1 96 0
 252 014c 7B69     		ldr	r3, [r7, #20]
 253 014e 013B     		sub	r3, r3, #1
 254 0150 7B61     		str	r3, [r7, #20]
 255              	.L16:
  97:../Sources/main.c ****                             
  98:../Sources/main.c ****                             TFC_SetBatteryLED_Level(t);
 256              		.loc 1 98 0
 257 0152 7B69     		ldr	r3, [r7, #20]
 258 0154 DBB2     		uxtb	r3, r3
 259 0156 181C     		mov	r0, r3
 260 0158 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  99:../Sources/main.c ****                            
 100:../Sources/main.c ****                             for(i=0;i<128;i++){
 261              		.loc 1 100 0
 262 015c 0023     		mov	r3, #0
 263 015e 3B61     		str	r3, [r7, #16]
 264 0160 17E0     		b	.L17
 265              	.L19:
 101:../Sources/main.c ****                                       	   //TERMINAL_PRINTF("%x,",LineScanImage0[i]);
 102:../Sources/main.c ****                                       	   //x hexa, i integer, f float......
 103:../Sources/main.c ****                                       	   if(LineScanImage0[i]<ana){
 266              		.loc 1 103 0
 267 0162 3B4B     		ldr	r3, .L29+16
 268 0164 1A68     		ldr	r2, [r3]
 269 0166 3B69     		ldr	r3, [r7, #16]
 270 0168 5B00     		lsl	r3, r3, #1
 271 016a D318     		add	r3, r2, r3
 272 016c 1B88     		ldrh	r3, [r3]
 273 016e 9BB2     		uxth	r3, r3
 274 0170 1A1C     		mov	r2, r3
 275 0172 FB68     		ldr	r3, [r7, #12]
 276 0174 9A42     		cmp	r2, r3
 277 0176 09D2     		bcs	.L18
 104:../Sources/main.c ****                                       		   ana = LineScanImage0[i];
 278              		.loc 1 104 0
 279 0178 354B     		ldr	r3, .L29+16
 280 017a 1A68     		ldr	r2, [r3]
 281 017c 3B69     		ldr	r3, [r7, #16]
 282 017e 5B00     		lsl	r3, r3, #1
 283 0180 D318     		add	r3, r2, r3
 284 0182 1B88     		ldrh	r3, [r3]
 285 0184 9BB2     		uxth	r3, r3
 286 0186 FB60     		str	r3, [r7, #12]
 105:../Sources/main.c ****                                       	   	   guardar = i;
 287              		.loc 1 105 0
 288 0188 3B69     		ldr	r3, [r7, #16]
 289 018a BB60     		str	r3, [r7, #8]
 290              	.L18:
 100:../Sources/main.c ****                             for(i=0;i<128;i++){
 291              		.loc 1 100 0
 292 018c 3B69     		ldr	r3, [r7, #16]
 293 018e 0133     		add	r3, r3, #1
 294 0190 3B61     		str	r3, [r7, #16]
 295              	.L17:
 100:../Sources/main.c ****                             for(i=0;i<128;i++){
 296              		.loc 1 100 0 is_stmt 0
 297 0192 3B69     		ldr	r3, [r7, #16]
 298 0194 7F2B     		cmp	r3, #127
 299 0196 E4D9     		bls	.L19
 106:../Sources/main.c ****                                       	  }
 107:../Sources/main.c ****                             }
 108:../Sources/main.c ****                                          guardar = guardar - 64;
 300              		.loc 1 108 0 is_stmt 1
 301 0198 BB68     		ldr	r3, [r7, #8]
 302 019a 403B     		sub	r3, r3, #64
 303 019c BB60     		str	r3, [r7, #8]
 109:../Sources/main.c ****                                          TERMINAL_PRINTF("\r\n");
 304              		.loc 1 109 0
 305 019e 2D4A     		ldr	r2, .L29+20
 306 01a0 2D4B     		ldr	r3, .L29+24
 307 01a2 101C     		mov	r0, r2
 308 01a4 191C     		mov	r1, r3
 309 01a6 FFF7FEFF 		bl	Qprintf
 110:../Sources/main.c ****                                          //TERMINAL_PRINTF("%i",guardar);
 111:../Sources/main.c ****                                          TFC_SetServo(0,(float)guardar/64.0f); //Rescale to -1.0 to
 310              		.loc 1 111 0
 311 01aa B868     		ldr	r0, [r7, #8]
 312 01ac FFF7FEFF 		bl	__aeabi_i2f
 313 01b0 031C     		add	r3, r0, #0
 314 01b2 181C     		add	r0, r3, #0
 315 01b4 8521     		mov	r1, #133
 316 01b6 C905     		lsl	r1, r1, #23
 317 01b8 FFF7FEFF 		bl	__aeabi_fdiv
 318 01bc 031C     		add	r3, r0, #0
 319 01be 0020     		mov	r0, #0
 320 01c0 191C     		add	r1, r3, #0
 321 01c2 FFF7FEFF 		bl	TFC_SetServo
 322              	.L14:
 112:../Sources/main.c ****                                                         
 113:../Sources/main.c ****                         }
 114:../Sources/main.c ****          TFC_HBRIDGE_ENABLE;
 323              		.loc 1 114 0
 324 01c6 204B     		ldr	r3, .L29+8
 325 01c8 8022     		mov	r2, #128
 326 01ca 9203     		lsl	r2, r2, #14
 327 01cc 5A60     		str	r2, [r3, #4]
 115:../Sources/main.c ****          
 116:../Sources/main.c ****          if((float)guardar < -5 && (float)guardar > 5){
 328              		.loc 1 116 0
 329 01ce B868     		ldr	r0, [r7, #8]
 330 01d0 FFF7FEFF 		bl	__aeabi_i2f
 331 01d4 031C     		add	r3, r0, #0
 332 01d6 181C     		add	r0, r3, #0
 333 01d8 2049     		ldr	r1, .L29+28
 334 01da FFF7FEFF 		bl	__aeabi_fcmplt
 335 01de 031C     		mov	r3, r0
 336 01e0 002B     		cmp	r3, #0
 337 01e2 28D0     		beq	.L20
 338              	.L25:
 339              		.loc 1 116 0 is_stmt 0
 340 01e4 B868     		ldr	r0, [r7, #8]
 341 01e6 FFF7FEFF 		bl	__aeabi_i2f
 342 01ea 031C     		add	r3, r0, #0
 343 01ec 181C     		add	r0, r3, #0
 344 01ee 1C49     		ldr	r1, .L29+32
 345 01f0 FFF7FEFF 		bl	__aeabi_fcmpgt
 346 01f4 031C     		mov	r3, r0
 347 01f6 002B     		cmp	r3, #0
 348 01f8 1DD0     		beq	.L20
 349              	.L26:
 117:../Sources/main.c ****         	 if(guardar < 0){
 350              		.loc 1 117 0 is_stmt 1
 351 01fa BB68     		ldr	r3, [r7, #8]
 352 01fc 002B     		cmp	r3, #0
 353 01fe 02DA     		bge	.L23
 118:../Sources/main.c ****         	 guardar = guardar*(-1);
 354              		.loc 1 118 0
 355 0200 BB68     		ldr	r3, [r7, #8]
 356 0202 5B42     		neg	r3, r3
 357 0204 BB60     		str	r3, [r7, #8]
 358              	.L23:
 119:../Sources/main.c ****         	 }
 120:../Sources/main.c ****          TFC_SetMotorPWM((float)guardar/100.0f,(float)guardar/100.0f);
 359              		.loc 1 120 0
 360 0206 B868     		ldr	r0, [r7, #8]
 361 0208 FFF7FEFF 		bl	__aeabi_i2f
 362 020c 031C     		add	r3, r0, #0
 363 020e 181C     		add	r0, r3, #0
 364 0210 1449     		ldr	r1, .L29+36
 365 0212 FFF7FEFF 		bl	__aeabi_fdiv
 366 0216 031C     		add	r3, r0, #0
 367 0218 1C1C     		add	r4, r3, #0
 368 021a B868     		ldr	r0, [r7, #8]
 369 021c FFF7FEFF 		bl	__aeabi_i2f
 370 0220 031C     		add	r3, r0, #0
 371 0222 181C     		add	r0, r3, #0
 372 0224 0F49     		ldr	r1, .L29+36
 373 0226 FFF7FEFF 		bl	__aeabi_fdiv
 374 022a 031C     		add	r3, r0, #0
 375 022c 201C     		add	r0, r4, #0
 376 022e 191C     		add	r1, r3, #0
 377 0230 FFF7FEFF 		bl	TFC_SetMotorPWM
 121:../Sources/main.c ****          }
 122:../Sources/main.c ****                    
 123:../Sources/main.c ****             break;
 378              		.loc 1 123 0
 379 0234 03E0     		b	.L7
 380              	.L20:
 381 0236 02E0     		b	.L7
 382              	.L27:
  29:../Sources/main.c ****             break;
 383              		.loc 1 29 0
 384 0238 C046     		mov	r8, r8
 385 023a 00E0     		b	.L7
 386              	.L28:
  76:../Sources/main.c ****             break;
 387              		.loc 1 76 0
 388 023c C046     		mov	r8, r8
 389              	.L7:
 124:../Sources/main.c ****          }
 125:../Sources/main.c ****    }
 390              		.loc 1 125 0
 391 023e EAE6     		b	.L24
 392              	.L30:
 393              		.align	2
 394              	.L29:
 395 0240 80F00F40 		.word	1074786432
 396 0244 00000000 		.word	TFC_Ticker
 397 0248 00F10F40 		.word	1074786560
 398 024c 00000000 		.word	LineScanImageReady
 399 0250 00000000 		.word	LineScanImage0
 400 0254 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 401 0258 00000000 		.word	.LC4
 402 025c 0000A0C0 		.word	-1063256064
 403 0260 0000A040 		.word	1084227584
 404 0264 0000C842 		.word	1120403456
 405              		.cfi_endproc
 406              	.LFE0:
 408              		.text
 409              	.Letext0:
 410              		.file 2 "C:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 411              		.file 3 "C:/Users/ana/workspace/FRDM-TFC/Project_Headers/MKL25Z4.h"
 412              		.file 4 "C:/Users/ana/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_Queue.h"
 413              		.file 5 "C:/Users/ana/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 414              		.file 6 "C:/Users/ana/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.h"
 415              		.file 7 "C:/Users/ana/workspace/FRDM-TFC/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Windows\cchlXo0n.s:18     .rodata:00000000 $d
C:\Windows\cchlXo0n.s:26     .text.main:00000000 $t
C:\Windows\cchlXo0n.s:31     .text.main:00000000 main
C:\Windows\cchlXo0n.s:395    .text.main:00000240 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fdiv
__aeabi_fcmplt
__aeabi_fcmpgt
TFC_Init
TFC_Task
TFC_SetMotorPWM
TFC_SetServo
TFC_ReadPot
TFC_SetBatteryLED_Level
Qprintf
TFC_Ticker
LineScanImageReady
LineScanImage0
SDA_SERIAL_OUTGOING_QUEUE
